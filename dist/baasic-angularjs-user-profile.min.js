!function(e,r){var a=e.module("baasic.userProfile",["baasic.api"]);!function(e,r,a){"use strict";r.service("baasicUserProfileRouteService",["baasicUriTemplateService",function(e){return{find:e.parse("profiles/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("profiles/{id}/{?embed,fields}"),create:e.parse("profiles"),parse:e.parse,acl:{get:e.parse("profiles/{id}/acl/{?fields}"),update:e.parse("profiles/{id}/acl/{?fields}"),deleteByUser:e.parse("profiles/{id}/acl/actions/{accessAction}/users/{user}/"),deleteByRole:e.parse("profiles/{id}/acl/actions/{accessAction}/roles/{role}/")}}}])}(e,a),function(e,r,a){"use strict";r.service("baasicUserProfileService",["baasicApiHttp","baasicApiService","baasicConstants","baasicUserProfileRouteService",function(r,a,t,i){return{find:function(e){return r.get(i.find.expand(a.findParams(e)))},get:function(e,t){return r.get(i.get.expand(a.getParams(e,t)))},create:function(e){return r.post(i.create.expand(),a.createParams(e)[t.modelPropertyName])},update:function(e){var i=a.updateParams(e);return r.put(i[t.modelPropertyName].links("put").href,i[t.modelPropertyName])},remove:function(e){var i=a.removeParams(e);return r["delete"](i[t.modelPropertyName].links("delete").href)},routeService:i,acl:{get:function(a){var t=e.copy(a);return r.get(i.acl.get.expand(t))},update:function(a){var s=e.copy(a);return r.put(i.acl.get.expand(s),s[t.modelPropertyName])},removeByUser:function(e,t,s,c){var o=a.removeParams(c);return o.profileId=e,o.user=s,o.accessAction=t,r["delete"](i.acl.deleteByUser.expand(o))},removeByRole:function(e,t,s,c){var o=a.removeParams(c);return o.profileId=e,o.role=s,o.accessAction=t,r["delete"](i.acl.deleteByRole.expand(o))}}}}])}(e,a)}(angular);